<?php //Contao__CoreBundle__Entity__Altcha__CLASSMETADATA__

return [PHP_INT_MAX, static fn () => \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
        clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Contao\\CoreBundle\\Entity\\Altcha',
            ],
            'namespace' => [
                'Contao\\CoreBundle\\Entity',
            ],
            'rootEntityName' => [
                'Contao\\CoreBundle\\Entity\\Altcha',
            ],
            'customRepositoryClassName' => [
                'Contao\\CoreBundle\\Repository\\AltchaRepository',
            ],
            'identifier' => [
                [
                    'id',
                ],
            ],
            'generatorType' => [
                4,
            ],
            'fieldMappings' => [
                [
                    'id' => [
                        'fieldName' => 'id',
                        'type' => 'integer',
                        'scale' => null,
                        'length' => null,
                        'unique' => false,
                        'nullable' => false,
                        'precision' => null,
                        'options' => [
                            'unsigned' => true,
                        ],
                        'id' => true,
                        'columnName' => 'id',
                    ],
                    'challenge' => [
                        'fieldName' => 'challenge',
                        'type' => 'string',
                        'scale' => null,
                        'length' => 64,
                        'unique' => false,
                        'nullable' => false,
                        'precision' => null,
                        'columnName' => 'challenge',
                    ],
                    'created' => [
                        'fieldName' => 'created',
                        'type' => 'datetime',
                        'scale' => null,
                        'length' => null,
                        'unique' => false,
                        'nullable' => false,
                        'precision' => null,
                        'columnName' => 'created',
                    ],
                    'expires' => [
                        'fieldName' => 'expires',
                        'type' => 'datetime',
                        'scale' => null,
                        'length' => null,
                        'unique' => false,
                        'nullable' => false,
                        'precision' => null,
                        'columnName' => 'expires',
                    ],
                ],
            ],
            'fieldNames' => [
                [
                    'id' => 'id',
                    'challenge' => 'challenge',
                    'created' => 'created',
                    'expires' => 'expires',
                ],
            ],
            'columnNames' => [
                [
                    'id' => 'id',
                    'challenge' => 'challenge',
                    'created' => 'created',
                    'expires' => 'expires',
                ],
            ],
            'table' => [
                [
                    'name' => 'altcha_challenges',
                    'indexes' => [
                        'challenge' => [
                            'columns' => [
                                'challenge',
                            ],
                        ],
                        'expires' => [
                            'columns' => [
                                'expires',
                            ],
                        ],
                    ],
                ],
            ],
            'idGenerator' => [
                $o[1],
            ],
        ],
    ],
    $o[0],
    []
)];
